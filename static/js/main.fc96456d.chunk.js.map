{"version":3,"sources":["index.js"],"names":["getRandomInt","max","Math","floor","random","searchInArrayOfArrays","bigArray","smallArray","i","length","toString","whereInArrayOfArrays","areThereDuplicates","array","t","deleteFirstCircle","follow","splice","Horizontal","className","style","backgroundColor","this","props","passed","solution","border","randomColored","React","Component","Vertical","Square","Game","state","path","directions","randoms","side","r","counter","setState","tops","rights","bottoms","lefts","push","start","concat","directionStart","myPathStart","currentSquare","newSquare","direction","myPath","myDirections","myRandoms","structure","rowHorizontal","horizontalRender","rowVertical","verticalRender","squareRender","onClick","go","show","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc96456d.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM, { render } from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nfunction searchInArrayOfArrays(bigArray,smallArray){\r\n  for (let i = 0; i < bigArray.length; i++) {\r\n    if (bigArray[i].toString() === smallArray.toString()) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction whereInArrayOfArrays(bigArray,smallArray){\r\n  for (let i = 0; i < bigArray.length; i++) {\r\n    if (bigArray[i].toString() === smallArray.toString()) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n//ci sono duplicati?\r\nfunction areThereDuplicates(array) {\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let t = i + 1; t < array.length; t++) {\r\n      if (array[i].toString() === array[t].toString()) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n//elimino le figure chiuse\r\nfunction deleteFirstCircle(array,follow) {\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let t = i + 1; t < array.length; t++) {\r\n      if (array[i].toString() === array[t].toString()) {\r\n        array.splice(i + 1,t - i);\r\n        follow.splice(i,t - i);\r\n        return [array,follow];\r\n      }\r\n    }\r\n  }\r\n  return [array,follow];\r\n}\r\n\r\nclass Horizontal extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"horizontal\"\r\n        style={{\r\n          backgroundColor: (this.props.passed && this.props.solution)? 'lightgrey' : ((this.props.passed || (!this.props.border && this.props.randomColored))? 'white' : 'black'),\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Vertical extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"vertical\"\r\n        style={{\r\n          backgroundColor: (this.props.passed && this.props.solution)? 'lightgrey' : ((this.props.passed || (!this.props.border && this.props.randomColored))? 'white' : 'black'),\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Square extends React.Component {\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"square\"\r\n        style={{\r\n          backgroundColor: (this.props.passed && this.props.solution)? 'lightgrey' : 'white'\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n  \r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      path: [],\r\n      directions: [],\r\n      solution: false,\r\n      randoms: [],\r\n      side: 20,\r\n    };\r\n  }\r\n  \r\n  //rendering\r\n  horizontalRender(r,i,counter) {\r\n    return <Horizontal\r\n      key={'horizontal-' + r + '-' + i}\r\n      border={(r === 0 || r === 20)? true : false}\r\n      passed={\r\n        (searchInArrayOfArrays(this.state.path,[r,i]) && this.state.directions[whereInArrayOfArrays(this.state.path,[r,i]) - 1] === 'bottom') ||\r\n        (searchInArrayOfArrays(this.state.path,[r - 1,i]) && this.state.directions[whereInArrayOfArrays(this.state.path,[r,i])] === 'top') ||\r\n        (searchInArrayOfArrays(this.state.path,[r,i]) && r === 0) ||\r\n        (searchInArrayOfArrays(this.state.path,[r - 1,i]) && r === 20)? true : false\r\n      }\r\n      randomColored = {this.state.randoms[counter] === 1? true : false}\r\n      solution={this.state.solution? true : false}\r\n    />\r\n  };\r\n  verticalRender(r,i,counter) {\r\n    return <Vertical\r\n      key={'vertical-' + r + '-' + i}\r\n      border={(i === 0 || i === 20)? true : false}\r\n      passed={\r\n        (searchInArrayOfArrays(this.state.path,[r,i]) && this.state.directions[whereInArrayOfArrays(this.state.path,[r,i]) - 1] === 'right') ||\r\n        (searchInArrayOfArrays(this.state.path,[r,i - 1]) && this.state.directions[whereInArrayOfArrays(this.state.path,[r,i])] === 'left') ||\r\n        (searchInArrayOfArrays(this.state.path,[r,i]) && i === 0) ||\r\n        (searchInArrayOfArrays(this.state.path,[r,i - 1]) && i === 20)? true : false\r\n      }\r\n      randomColored = {this.state.randoms[counter] === 1? true : false}\r\n      solution={this.state.solution? true : false}\r\n    />\r\n  };\r\n  squareRender(r,i) {\r\n    return <Square \r\n      key={'square-' + r + '-' + i}\r\n      passed={(searchInArrayOfArrays(this.state.path,[r,i])? true : false)}\r\n      solution={this.state.solution? true : false}\r\n    />\r\n  };\r\n\r\n  show() {\r\n    this.setState({\r\n      solution: !this.state.solution,\r\n    });\r\n  }\r\n\r\n  go() {\r\n\r\n    //bordi\r\n    var tops = [];\r\n    var rights = [];\r\n    var bottoms = [];\r\n    var lefts = [];\r\n    for (let i = 0; i < this.state.side; i++) {\r\n      tops.push([0,i]);\r\n      rights.push([i,this.state.side - 1]);\r\n      bottoms.push([this.state.side - 1,i]);\r\n      lefts.push([i,0]);\r\n    }\r\n    \r\n    //start\r\n    var border = tops.concat(rights).concat(bottoms).concat(lefts);\r\n    var start;\r\n    do {\r\n      start = border[getRandomInt(border.length)];\r\n    } while (\r\n      start.toString() === [0,0].toString() ||\r\n      start.toString() === [0,19].toString() ||\r\n      start.toString() === [19,0].toString() ||\r\n      start.toString() === [19,19].toString()\r\n    )\r\n    var myPathStart = [];\r\n    myPathStart.push(start);\r\n\r\n    var directionStart;\r\n    var directions = ['top','right','bottom','left'];\r\n    if (searchInArrayOfArrays(tops,start)) {\r\n      directionStart = 'bottom';\r\n      myPathStart.push([start[0] + 1,start[1]]);\r\n      directions = directions.concat('right').concat('bottom').concat('left');\r\n    }\r\n    else if (searchInArrayOfArrays(rights,start)) {\r\n      directionStart = 'left';\r\n      myPathStart.push([start[0],start[1] - 1]);\r\n      directions = directions.concat('left').concat('bottom').concat('top');\r\n    }\r\n    else if (searchInArrayOfArrays(bottoms,start)) {\r\n      directionStart = 'top';\r\n      myPathStart.push([start[0] - 1,start[1]]);\r\n      directions = directions.concat('right').concat('top').concat('left');\r\n    }\r\n    else if (searchInArrayOfArrays(lefts,start)) {\r\n      directionStart = 'right';\r\n      myPathStart.push([start[0],start[1] + 1]);\r\n      directions = directions.concat('right').concat('bottom').concat('top');\r\n    }\r\n\r\n    //prosecuzione\r\n    var currentSquare;\r\n    var newSquare;\r\n    var direction;\r\n    var myPath = [];\r\n    var myDirections = [];\r\n    var array = [];\r\n\r\n    while (myPath.length < 20) {\r\n      myPath = [myPathStart[0],myPathStart[1]];\r\n      myDirections = [];\r\n      myDirections.push(directionStart);\r\n\r\n      do {\r\n        currentSquare = myPath[myPath.length - 1];\r\n        newSquare = [currentSquare[0],currentSquare[1]];\r\n        direction = directions[getRandomInt(7)];\r\n        if (direction === 'top') {\r\n          newSquare[0]--;\r\n        }\r\n        else if (direction === 'right') {\r\n          newSquare[1]++;\r\n        }\r\n        else if (direction === 'bottom') {\r\n          newSquare[0]++;\r\n        }\r\n        else if (direction === 'left') {\r\n          newSquare[1]--;\r\n        }\r\n        myDirections.push(direction);\r\n        myPath.push(newSquare);\r\n      } while (!searchInArrayOfArrays(border,currentSquare))\r\n\r\n      myDirections.splice(myDirections.length - 1,1);\r\n      myPath.splice(myPath.length - 1,1);\r\n      array = [];\r\n      while (areThereDuplicates(myPath)) {\r\n        array = deleteFirstCircle(myPath,myDirections);\r\n        myPath = array[0];\r\n        myDirections = array[1];\r\n      }\r\n      \r\n    }\r\n\r\n    var myRandoms = [];\r\n    for (let i = 0; i < ((this.state.side + 1) * (this.state.side)) * 2; i++) {\r\n      myRandoms.push(getRandomInt(2));\r\n    }\r\n    \r\n    this.setState({\r\n      path: myPath,\r\n      directions: myDirections,\r\n      solution: false,\r\n      randoms: myRandoms,\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    var structure = [];\r\n    var counter = 0;\r\n    for (var r = 0; r < this.state.side; r++) {\r\n      var rowHorizontal = [];\r\n      for (let i = 0; i < this.state.side; i++) {\r\n        rowHorizontal.push(this.horizontalRender(r,i,counter));\r\n        counter++;\r\n      }\r\n      var rowVertical = [];\r\n      for (var i = 0; i < this.state.side; i++) {\r\n        rowVertical.push(this.verticalRender(r,i,counter));\r\n        counter++;\r\n        rowVertical.push(this.squareRender(r,i,counter));\r\n      }\r\n      rowVertical.push(this.verticalRender(r,i,counter));\r\n      counter++;\r\n      structure.push(<div className=\"noMargin\" key={'row-horizontal-' + r}>{rowHorizontal}</div>,<div className=\"noMargin\" key={'row-vertical-' + r}>{rowVertical}</div>);\r\n    }\r\n    rowHorizontal = [];\r\n    for (let i = 0; i < this.state.side; i++) {\r\n      rowHorizontal.push(this.horizontalRender(r,i,counter));\r\n      counter++;\r\n    }\r\n    structure.push(<div className=\"noMargin\" key={'row-horizontal-' + r}>{rowHorizontal}</div>);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>generatore di labirinti</h1>\r\n        <div className=\"button-container\">\r\n          <button className=\"new\" onClick={() => this.go()}>Nuovo</button>\r\n          <button className=\"solution\" onClick={() => this.show()}>Soluzione</button>\r\n        </div>\r\n        <div className=\"structure\">{structure}</div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}